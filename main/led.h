#ifndef LED_H
#define LED_H

/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////// DECLARATION DES BIBLIOTHEQUES
/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////
#include "esp_err.h"
#include "esp_log.h"
#include "freertos/FreeRTOS.h"
#include "freertos/queue.h"
#include "initialisation.h"
#include "led_strip.h"

/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////// DECLARATION DES CONSTANTES
/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////
// Définir ici la configuration de la bande LED
#define LED_STRIP_GPIO 48  // Numéro de GPIO pour la bande LED
#define NUM_LEDS 1         // Nombre de LEDs sur la bande

/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////// DECLARATION DES VARIABLES
/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////
// Définition de l'énumération BlinkMode
typedef enum {
  BLINK_MODE_SLOW_GREEN = 0,  // Clignotement vert lent
  BLINK_MODE_SLOW_YELLOW,
  BLINK_MODE_FAST_YELLOW,  // Clignotement jaune rapide
  BLINK_MODE_FAST_RED,     // Clignotement rouge rapide
  NO_BLINK
} BlinkMode;

// Définition de la structure BlinkStrategy
typedef struct {
  BlinkMode mode;
  esp_err_t (*blink_function)(void);
} BlinkStrategy;

/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////// DECLARATION DES VARIABLES EXTERNES
/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////
extern BlinkStrategy blink_strategies[];
extern const int NUM_STRATEGIES;

/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////// PROTOCOLE DES FONCTIONS
/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////
// Fonctions pour la gestion de la bande LED
void led_task(void *pvParameter);
void led_init_previous_mode();
esp_err_t queue_init(void);
esp_err_t led_init(void);                                                  // Initialiser la bande LED
esp_err_t led_set_color(uint32_t index, uint8_t r, uint8_t g, uint8_t b);  // Définir la couleur d'une LED
esp_err_t led_refresh(void);                                               // Rafraîchir pour appliquer les changements
esp_err_t led_clear(void);                                                 // Effacer les LEDs (toutes les éteindre)
esp_err_t led_send_command(BlinkMode mode);                                // envoi de la commande
BlinkMode get_previous_BlinkMode();
// Prototypes des fonctions de clignotement
esp_err_t slow_green_blink(void);
esp_err_t slow_yellow_blink(void);
esp_err_t fast_yellow_blink(void);
esp_err_t fast_red_blink(void);
esp_err_t no_blink(void);

#endif  // LED_H
